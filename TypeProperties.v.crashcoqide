Require Export List.
Open Scope list_scope.


Section Definitions.
Variable T : Type.

  Class Inhabited
  : Prop :=
    exist_proof : exists e : list T, e <> nil.
  Class Finite
  : Prop :=
    fin_proof : exists e : list T, forall t : T, In t e.

End Definitions.


Section BasicDependence.
Variable T : Type.

  Theorem not_Inhabited_is_Finite : ~ Inhabited T -> Finite T.
  Proof.
    intros* H.
    exists nil. intro. exfalso. apply H.
    exists (t :: nil). intro H'. discriminate H'.
  Qed.

End BasicDependence.